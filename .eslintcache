[{"C:\\Users\\Technolet\\Desktop\\chat-app\\src\\index.js":"1","C:\\Users\\Technolet\\Desktop\\chat-app\\src\\store\\index.js":"2","C:\\Users\\Technolet\\Desktop\\chat-app\\src\\store\\action\\index.js":"3","C:\\Users\\Technolet\\Desktop\\chat-app\\src\\App.js":"4","C:\\Users\\Technolet\\Desktop\\chat-app\\src\\containers\\Home\\index.js":"5","C:\\Users\\Technolet\\Desktop\\chat-app\\src\\reportWebVitals.js":"6","C:\\Users\\Technolet\\Desktop\\chat-app\\src\\store\\reducer\\index.js":"7","C:\\Users\\Technolet\\Desktop\\chat-app\\src\\containers\\Chat\\index.js":"8","C:\\Users\\Technolet\\Desktop\\chat-app\\src\\config\\router.js":"9"},{"size":924,"mtime":1607509544258,"results":"10","hashOfConfig":"11"},{"size":242,"mtime":1606725851576,"results":"12","hashOfConfig":"11"},{"size":1570,"mtime":1607509925085,"results":"13","hashOfConfig":"11"},{"size":289,"mtime":1607535670016,"results":"14","hashOfConfig":"11"},{"size":1172,"mtime":1607513451451,"results":"15","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"11"},{"size":534,"mtime":1608406346015,"results":"17","hashOfConfig":"11"},{"size":7438,"mtime":1608406781482,"results":"18","hashOfConfig":"11"},{"size":433,"mtime":1607510039542,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"s625op",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Technolet\\Desktop\\chat-app\\src\\index.js",[],["43","44"],"C:\\Users\\Technolet\\Desktop\\chat-app\\src\\store\\index.js",[],"C:\\Users\\Technolet\\Desktop\\chat-app\\src\\store\\action\\index.js",["45"],"import firebase from \"firebase\";\r\n\r\nconst facebook_login = (history) => {\r\n  console.log(\"chl rha h\");\r\n  return (dispatch) => {\r\n    var provider = new firebase.auth.FacebookAuthProvider();\r\n    console.log(provider);\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then(function (result) {\r\n        var token = result.credential.accessToken;\r\n        // The signed-in user info.\r\n        var user = result.user;\r\n        let create_user = {\r\n          name: user.displayName,\r\n          email: user.email,\r\n          profile: user.photoURL,\r\n          uid: user.uid,\r\n        };\r\n        firebase\r\n          .database()\r\n          .ref(\"/\")\r\n          .child(`users/${user.uid}`)\r\n          .set(create_user)\r\n          .then(() => {\r\n            dispatch({ type: \"SETUSER\", payload: create_user });\r\n            alert(\"successfully logged in\");\r\n            history.push(\"/chat\");\r\n          });\r\n      })\r\n      .catch(function (error) {\r\n        var errorMessage = error.message;\r\n        console.log(\"firebase-error\", errorMessage);\r\n      });\r\n  };\r\n};\r\n\r\n// get users from firebase\r\nconst get_users = () => {\r\n  return (dispatch) => {\r\n    let users = [];\r\n    firebase\r\n      .database()\r\n      .ref(\"/\")\r\n      .child(\"users\")\r\n      .on(\"child_added\", (data) => {\r\n        users.push(data.val());\r\n        // to send users in state\r\n        dispatch({ type: \"SETFIREBASEUSERS\", payload: users });\r\n      });\r\n  };\r\n};\r\n// single dispatch cannot have two types you can make multiiple dispatches\r\n\r\nexport { facebook_login, get_users };\r\n","C:\\Users\\Technolet\\Desktop\\chat-app\\src\\App.js",[],["46","47"],"C:\\Users\\Technolet\\Desktop\\chat-app\\src\\containers\\Home\\index.js",["48"],"C:\\Users\\Technolet\\Desktop\\chat-app\\src\\reportWebVitals.js",[],["49","50"],"C:\\Users\\Technolet\\Desktop\\chat-app\\src\\store\\reducer\\index.js",["51"],"// Global State\r\nconst INITIAL_STATE = {\r\n  users: [],\r\n  current_user: {},\r\n};\r\n\r\n// returning state\r\n// this function will run when we call dispatch  and pass data and that data will recieve here\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SETUSER\":\r\n      return {\r\n        ...state,\r\n        current_user: action.payload,\r\n      };\r\n    case \"SETFIREBASEUSERS\":\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Technolet\\Desktop\\chat-app\\src\\containers\\Chat\\index.js",["52","53","54","55","56","57"],"C:\\Users\\Technolet\\Desktop\\chat-app\\src\\config\\router.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":12,"column":13,"nodeType":"64","messageId":"65","endLine":12,"endColumn":18},{"ruleId":"58","replacedBy":"66"},{"ruleId":"60","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":12,"column":8,"nodeType":"70","endLine":12,"endColumn":46},{"ruleId":"58","replacedBy":"71"},{"ruleId":"60","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":9,"column":1,"nodeType":"75","endLine":24,"endColumn":3},{"ruleId":"68","severity":1,"message":"69","line":125,"column":19,"nodeType":"70","endLine":129,"endColumn":21},{"ruleId":"76","severity":1,"message":"77","line":143,"column":31,"nodeType":"78","endLine":143,"endColumn":41},{"ruleId":"76","severity":1,"message":"77","line":163,"column":31,"nodeType":"78","endLine":163,"endColumn":41},{"ruleId":"76","severity":1,"message":"77","line":185,"column":25,"nodeType":"78","endLine":185,"endColumn":35},{"ruleId":"76","severity":1,"message":"77","line":189,"column":25,"nodeType":"78","endLine":189,"endColumn":31},{"ruleId":"68","severity":1,"message":"69","line":214,"column":23,"nodeType":"70","endLine":218,"endColumn":25},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar",["79"],["80"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["79"],["80"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]